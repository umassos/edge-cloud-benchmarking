---

- name: Get home directory
  set_fact:
    home: "{{ ansible_env.HOME }}"

- name: Pull the health checker image
  docker_image:
    name: binw/health_checker
    source: pull
    force_source: true
  register: pull_result
  retries: 10
  delay: 5
  until: pull_result is succeeded

- name: Ensure the health checker config directory exists
  file:
    path: "{{ home }}/config"
    state: directory
    mode: "0755"

- name: Write health checker config
  copy:
    content: "{{ (groups['cpu_worker'] + groups['gpu_worker']) | join('\n') }}"
    dest: "{{ home }}/config/servers.txt"
    mode: "0644"

- name: Run health checker container
  docker_container:
    name: health_checker
    image: binw/health_checker
    container_default_behavior: compatibility
    detach: true
    published_ports:
      - 5000:5000
    volumes:
      - "{{ home }}/config:/config:ro"
  register: result

- set_fact:
    health_checker_container: "{{ result.container }}"

- name: Pull the haproxy image
  docker_image:
    name: haproxy
    source: pull
    tag: 2.3.7
  register: pull_result
  retries: 10
  delay: 5
  until: pull_result is succeeded

- name: Ensure the haproxy config directory exists
  file:
    path: "{{ home }}/haproxy"
    state: directory
    mode: "0755"

- name: Write haproxy config from template
  template:
    src: haproxy.cfg.j2
    dest: "{{ home }}/haproxy/haproxy.cfg"
    mode: "0644"
  register: write_config_result

- name: Run haproxy container
  docker_container:
    name: haproxy
    image: haproxy:2.3.7
    container_default_behavior: compatibility
    detach: true
    ulimits:
      - nofile:65535:65535
    sysctls:
      net.ipv4.ip_unprivileged_port_start: 0
    volumes:
      - "{{ home }}/haproxy:/usr/local/etc/haproxy:ro"
    published_ports:
      - 80:80

- name: Reload if config has been changed
  command: docker kill -s HUP haproxy
  when:
    write_config_result.changed
